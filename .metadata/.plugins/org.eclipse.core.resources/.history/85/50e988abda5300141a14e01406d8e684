package lab4;
import se.lth.cs.window.SimpleWindow;

public class Turtle {
	// ... lägg till attribut
	private double x;
	private double y;
	private SimpleWindow w;
	private boolean penDown = false;
	private int angle;
	
	/**
	 * Skapar en sköldpadda som ritar i ritfönstret w. Från början befinner sig
	 * sköldpaddan i punkten x,y med pennan lyft och huvudet pekande rakt uppåt
	 * i fönstret (i negativ y-riktning)
	 */
	public Turtle(SimpleWindow w, int x, int y) {
		this.w = w;
		this.w.moveTo(x, y);
		this.x = x;
		this.y = y;
		penDown = false;
		angle = 90;
	}
	
	/** Sänker pennan */
	public void penDown() {
		penDown = true;
	}
	
	/** Lyfter pennan */
	public void penUp() {
		penDown = false;
	}
	
	
	//Bör vara klar
	/** Går rakt framåt n pixlar i den riktning som huvudet pekar */
	public void forward(int n) {
		w.moveTo((int)x, (int)y);
		//Om pennan är nere så ska den rita
		if(penDown){
			int tempX = (int)(x + (Math.cos(Math.toRadians(angle)) * n));
			int tempY = (int)(y - (Math.sin(Math.toRadians(angle)) * n));
			w.lineTo(tempX, tempY);
			x = tempX;
			y = tempY;
		}
		
		//Om pennan ej är nere så ska det inte ritas.
		else{
			int tempX = (int)(x + (Math.cos(Math.toRadians(angle)) * n));
			int tempY = (int)(y - (Math.sin(Math.toRadians(angle)) * n));
			w.moveTo(tempX, tempY);
			x = tempX;
			y = tempY;
		}
	}
	
	/** Vrider beta grader åt vänster runt pennan */
	public void left(int beta) {
		angle = angle + beta;
	}
	
	/** Går till punkten newX,newY utan att rita. Pennans läge (sänkt 
	    eller lyft) och huvudets riktning påverkas inte */
	public void jumpTo(int newX, int newY) {
		x = newX;
		y = newY;
	}
	
	/** Återställer huvudriktningen till den ursprungliga */
	public void turnNorth() {
		angle = 90;
	}
	
	/** Tar reda på x-koordinaten för sköldpaddans aktuella position */
	public int getX() {
		return (int)x;
	}
	
	/** Tar reda på y-koordinaten för sköldpaddans aktuella position */
	public int getY() {
		return (int)y;
	}
	
	/** Tar reda på sköldpaddans riktning, i grader från positiv x-led */
	public int getDirection() {
		return angle;
	}
}
